/*
 * @Description: createjs工具类
 * @Author: 彭祥 (Email:245803627@qq.com)
 * @Date: 2020/1/15 15:10
 * @LastEditors: pengxiang
 * @LastEditTime: 2020/1/15 15:10
 */


//---------------------------------------createjs里用到的方法 开始------------------------------------------------------//
const createjs = window.createjs || {};
const exportRoot = window.exportRoot || {};
const stage = window.stage || {};

/*createjs里用到的方法*/
export const cjsObj = {};
/*元素和元素之间的碰撞检测*/
cjsObj.HitTestObject = function(obj1,obj2) {
    if(!obj1 || !obj2){return false;}
    //var rect = new createjs.Rectangle(0, 0, 100, 100);
    var rect1 = obj1.getBounds();
    var rect2 = obj2.getBounds();
    rect1.x = obj1.x;
    rect1.y = obj1.y;
    rect2.x = obj2.x;
    rect2.y = obj2.y;
    return rect1.intersects(rect2);
};
/*优化型，可以带参数的Event*/
cjsObj.MsgEvent = function (type, data, bubbles, cancelable) {
    const msgEvent = new createjs.Event(type, bubbles || false, cancelable || false);
    msgEvent.data = data;
    return msgEvent;
};
/*判断cjs的canvas上的元素是否渲染成功。true 渲染成功；false 渲染不成功；*/
cjsObj.onCanvasRendered = function(value, fun) {
    var t = window.setInterval(function () {
        if(exportRoot && exportRoot.numChildren > 0 && stage && stage.contains(exportRoot)){
            window.clearInterval(t);
            if (typeof fun === 'function') {fun(true);}
        }
    }, 200);

};

cjsObj.ButtonHelper = function(mc, cursor) {
    mc.gotoAndStop(0);
    if(cursor) {mc.cursor = cursor;}
    mc.addEventListener('mouseover', (event)=>{
        mc.gotoAndStop(1);
    });
    mc.addEventListener('mouseout', (event)=>{
        mc.gotoAndStop(0);
    });
};

//-------------------------------------拖动部件 开始---------------------------------------------------------//
cjsObj.DragWidget = class DragWidget {
    constructor() {
    }
    /**
     * @param obj    拖动元件
     * @param isTop  拖动的时候是否置顶，设置为最上层
     */
    init(obj, isTop) {
        // if(!obj){return false;}
        this.oldX = 0;
        this.oldY = 0;
        this.AnObj = obj;
        this.isTop = isTop || false;
        this.AnObj.addEventListener("mousedown", this.onMDown.bind(this));
        this.AnObj.addEventListener("pressup", this.onMUp.bind(this));
    }
    onMDown(event) {
        const target = event.currentTarget; // target.startDrag();
        if(this.isTop === true) {
            this.AnObj.parent.setChildIndex(target, this.AnObj.parent.numChildren - 1);
        }
        this.oldX = event.stageX;
        this.oldY = event.stageY;
        target.addEventListener("pressmove", this.onMMove.bind(this));
    }
    onMUp(event) {
        const target = event.currentTarget; // target.stopDrag();
        target.removeEventListener("pressmove", this.onMMove.bind(this));
        // that.setChildIndex(target, that.numChildren - 1);
    }
    onMMove(event){
        // const target = event.currentTarget;
        // const point = this.AnObj.globalToLocal(this.AnObj.stage.mouseX, this.AnObj.stage.mouseY);
        // target.x = point.x;
        // target.y = point.y;

        event.currentTarget.x += event.stageX - this.oldX;
        event.currentTarget.y += event.stageY - this.oldY;
        this.oldX = event.stageX;
        this.oldY = event.stageY;
    }
    stopDrag() {
        this.AnObj.removeEventListener("mousedown", this.onMDown.bind(this));
        this.AnObj.removeEventListener("pressup", this.onMUp.bind(this));
        this.AnObj.removeAllEventListeners();
    }
    startDrag() {
        this.AnObj.addEventListener("mousedown", this.onMDown.bind(this));
        this.AnObj.addEventListener("pressup", this.onMUp.bind(this));
    }
};
//-------------------------------------拖动部件 结束---------------------------------------------------------//











//---------------------------------------createjs里用到的方法 结束------------------------------------------------------//
